/**
 * TP-Contest Backend
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * ContestApiImpl.h
 *
 *
 */

#ifndef CONTEST_API_IMPL_H_
#define CONTEST_API_IMPL_H_

#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>

#include <ContestApi.h>

#include <pistache/optional.h>

#include <string>
#include "ContestIdObject.h"
#include "PackageId.h"
#include "Solution.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class ContestApiImpl : public org::openapitools::server::api::ContestApi {
 public:
  ContestApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~ContestApiImpl() {}

  void create_contest(const Pistache::Rest::Request &request,
                      Pistache::Http::ResponseWriter &response);
  void get_solution(const Pistache::Optional<int32_t> &sessionId,
                    const Pistache::Optional<int32_t> &contestId,
                    Pistache::Http::ResponseWriter &response);
  void send_task(const Pistache::Rest::Request &request,
                 Pistache::Http::ResponseWriter &response);
};

}  // namespace api
}  // namespace server
}  // namespace openapitools
}  // namespace org

#endif